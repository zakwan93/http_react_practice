{"ast":null,"code":"import _objectSpread from \"/Users/zakwan/Desktop/react_practice_projects/http_react_practice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/zakwan/Desktop/react_practice_projects/http_react_practice/src/containers/Blog/Posts/Posts.js\";\nimport React, { Component } from \"react\";\nimport axios from \"../../../axios\";\nimport Post from \"../../../components/Post/Post\";\nimport { Route } from \"react-router-dom\"; // import { Link } from \"react-router-dom\";\n\nimport \"./Posts.css\";\n\nclass Posts extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      posts: [],\n      selectedPostId: null,\n      error: false\n    };\n\n    this.postSelectedHandler = id => {\n      // this.setState({ selectedPostId: id });\n      this.props.history.push({\n        pathname: \"/\" + id\n      });\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"/posts\").then(response => {\n      const posts = response.data.slice(80, 84);\n      const updatedPost = posts.map(post => {\n        return _objectSpread({}, post, {\n          author: \"- Zakwan\"\n        });\n      });\n      this.setState({\n        posts: updatedPost\n      }); // console.log(response);\n    }).catch(error => {\n      this.setState({\n        error: true\n      });\n      console.log(error);\n    });\n  }\n\n  render() {\n    let posts = React.createElement(\"p\", {\n      style: {\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"Something went wrong!\");\n\n    if (!this.state.error) {\n      posts = this.state.posts.map(post => {\n        return (//   <Link to={\"/\" + post.id} key={post.id}>\n          React.createElement(Post, {\n            key: post.id,\n            title: post.title,\n            author: post.author,\n            clicked: () => this.postSelectedHandler(post.id),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 47\n            },\n            __self: this\n          }) //   </Link>\n\n        );\n      });\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/:id\",\n      exact: true,\n      component: FullPost,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    })), React.createElement(\"section\", {\n      className: \"Posts\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, posts));\n  }\n\n}\n\nexport default Posts;","map":{"version":3,"sources":["/Users/zakwan/Desktop/react_practice_projects/http_react_practice/src/containers/Blog/Posts/Posts.js"],"names":["React","Component","axios","Post","Route","Posts","state","posts","selectedPostId","error","postSelectedHandler","id","props","history","push","pathname","componentDidMount","get","then","response","data","slice","updatedPost","map","post","author","setState","catch","console","log","render","textAlign","title","FullPost"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,IAAP,MAAiB,+BAAjB;AACA,SAASC,KAAT,QAAsB,kBAAtB,C,CAEA;;AACA,OAAO,aAAP;;AAEA,MAAMC,KAAN,SAAoBJ,SAApB,CAA8B;AAAA;AAAA;AAAA,SAC5BK,KAD4B,GACpB;AACNC,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,cAAc,EAAE,IAFV;AAGNC,MAAAA,KAAK,EAAE;AAHD,KADoB;;AAAA,SA2B5BC,mBA3B4B,GA2BNC,EAAE,IAAI;AAC1B;AACA,WAAKC,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB;AAAEC,QAAAA,QAAQ,EAAE,MAAMJ;AAAlB,OAAxB;AACD,KA9B2B;AAAA;;AAO5BK,EAAAA,iBAAiB,GAAG;AAClBd,IAAAA,KAAK,CACFe,GADH,CACO,QADP,EAEGC,IAFH,CAEQC,QAAQ,IAAI;AAChB,YAAMZ,KAAK,GAAGY,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoB,EAApB,EAAwB,EAAxB,CAAd;AACA,YAAMC,WAAW,GAAGf,KAAK,CAACgB,GAAN,CAAUC,IAAI,IAAI;AACpC,iCACKA,IADL;AAEEC,UAAAA,MAAM,EAAE;AAFV;AAID,OALmB,CAApB;AAMA,WAAKC,QAAL,CAAc;AAAEnB,QAAAA,KAAK,EAAEe;AAAT,OAAd,EARgB,CAShB;AACD,KAZH,EAaGK,KAbH,CAaSlB,KAAK,IAAI;AACd,WAAKiB,QAAL,CAAc;AAAEjB,QAAAA,KAAK,EAAE;AAAT,OAAd;AACAmB,MAAAA,OAAO,CAACC,GAAR,CAAYpB,KAAZ;AACD,KAhBH;AAiBD;;AAMDqB,EAAAA,MAAM,GAAG;AACP,QAAIvB,KAAK,GAAG;AAAG,MAAA,KAAK,EAAE;AAAEwB,QAAAA,SAAS,EAAE;AAAb,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAZ;;AAEA,QAAI,CAAC,KAAKzB,KAAL,CAAWG,KAAhB,EAAuB;AACrBF,MAAAA,KAAK,GAAG,KAAKD,KAAL,CAAWC,KAAX,CAAiBgB,GAAjB,CAAqBC,IAAI,IAAI;AACnC,eACE;AACA,8BAAC,IAAD;AACE,YAAA,GAAG,EAAEA,IAAI,CAACb,EADZ;AAEE,YAAA,KAAK,EAAEa,IAAI,CAACQ,KAFd;AAGE,YAAA,MAAM,EAAER,IAAI,CAACC,MAHf;AAIE,YAAA,OAAO,EAAE,MAAM,KAAKf,mBAAL,CAAyBc,IAAI,CAACb,EAA9B,CAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,CAQE;;AARF;AAUD,OAXO,CAAR;AAYD;;AAED,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,KAAK,MAAxB;AAAyB,MAAA,SAAS,EAAEsB,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAJF,EAOE;AAAS,MAAA,SAAS,EAAC,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4B1B,KAA5B,CAPF,CADF;AAWD;;AA5D2B;;AA+D9B,eAAeF,KAAf","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"../../../axios\";\nimport Post from \"../../../components/Post/Post\";\nimport { Route } from \"react-router-dom\";\n\n// import { Link } from \"react-router-dom\";\nimport \"./Posts.css\";\n\nclass Posts extends Component {\n  state = {\n    posts: [],\n    selectedPostId: null,\n    error: false\n  };\n\n  componentDidMount() {\n    axios\n      .get(\"/posts\")\n      .then(response => {\n        const posts = response.data.slice(80, 84);\n        const updatedPost = posts.map(post => {\n          return {\n            ...post,\n            author: \"- Zakwan\"\n          };\n        });\n        this.setState({ posts: updatedPost });\n        // console.log(response);\n      })\n      .catch(error => {\n        this.setState({ error: true });\n        console.log(error);\n      });\n  }\n\n  postSelectedHandler = id => {\n    // this.setState({ selectedPostId: id });\n    this.props.history.push({ pathname: \"/\" + id });\n  };\n  render() {\n    let posts = <p style={{ textAlign: \"center\" }}>Something went wrong!</p>;\n\n    if (!this.state.error) {\n      posts = this.state.posts.map(post => {\n        return (\n          //   <Link to={\"/\" + post.id} key={post.id}>\n          <Post\n            key={post.id}\n            title={post.title}\n            author={post.author}\n            clicked={() => this.postSelectedHandler(post.id)}\n          />\n          //   </Link>\n        );\n      });\n    }\n\n    return (\n      <div>\n        {/* <section>\n          <FullPost id={this.state.selectedPostId} />\n        </section> */}\n        <div>\n          <Route path=\"/:id\" exact component={FullPost} />\n        </div>\n        <section className=\"Posts\">{posts}</section>\n      </div>\n    );\n  }\n}\n\nexport default Posts;\n"]},"metadata":{},"sourceType":"module"}